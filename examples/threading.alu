use std::thread::{sleep, spawn};
use std::time::Duration;
use std::sync::channel::Channel;

fn main() {
    // Create a new channel with capacity of 5
    let c1: Channel<i32> = Channel::new(5);
    defer c1.free();

    let t1 = spawn(|&c1| {
        for i in 0..10 {
            c1.send(i);
            println!("Sent {}", i);
        }

        // Signal that no more values are coming
        c1.close();
    });
    defer t1.join().unwrap();

    // Give the producer a head start
    std::thread::sleep(Duration::from_millis(100));

    // Receive all the values slowly
    for i in c1 {
        println!("Received {}", i);
        std::thread::sleep(Duration::from_millis(100));
    }
}

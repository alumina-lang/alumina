use std::hash::{Hasher, Hashable};
use std::cmp::{Equatable, Comparable};
use std::collections::{HashMap, Vector, free_all};
use std::string::StringBuf;
use std::fmt::format;
use std::iter::for_each;
use std::random::DEFAULT_RNG;

fn main() {
    let vec: Vector<StringBuf> = Vector::new();
    defer vec.free_all();

    for i in 0..100 {
        vec.push(format!("Hello, you are number {}", i).unwrap());
    }

    let hm = HashMap::new::<&[u8], u32>();
    defer hm.free();

    for i in vec {
        hm.insert(i.as_slice(), DEFAULT_RNG.next_u32());
    }

    for elem in hm {
        println!("{} => {}", elem.0, elem.1);
    }
}

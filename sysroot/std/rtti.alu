//! Run time type information

type TypeId = usize;

/// Returns a unique identifer for the type passed as the generic parameter.
///
/// The resulting value is not guaranteed to be the same when program is recompiled.
fn type_id<T>() -> TypeId {
    intrinsics::type_id::<T>()
}

fn type_name<T>() -> &[u8] {
    intrinsics::type_name::<T>()
}

#[cfg(all(test, test_std))]
mod tests {
    #[test]
    fn test_type_name() {
        assert_eq!(type_name::<u8>(), "u8");
        assert_eq!(type_name::<u16>(), "u16");

        // inception
        assert_eq!(type_name::<type_name<type_name<u32>>>(), "type_name<type_name<u32>>");

    }
}

//! Interprocedural transformations of LLVM IR.

extern "C" fn LLVMAddArgumentPromotionPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddConstantMergePass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddMergeFunctionsPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddCalledValuePropagationPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddDeadArgEliminationPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddFunctionAttrsPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddFunctionInliningPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddAlwaysInlinerPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddGlobalDCEPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddGlobalOptimizerPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddPruneEHPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddIPSCCPPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddInternalizePass(arg1: LLVMPassManagerRef, AllButMain: libc::c_uint);
extern "C" fn LLVMAddInternalizePassWithMustPreservePredicate(
    PM: LLVMPassManagerRef,
    Context: &mut void,
    MustPreserve: fn(LLVMValueRef, &mut void) -> LLVMBool,
);
extern "C" fn LLVMAddStripDeadPrototypesPass(PM: LLVMPassManagerRef);
extern "C" fn LLVMAddStripSymbolsPass(PM: LLVMPassManagerRef);

